{% import 'OroUIBundle::macros.html.twig' as UI %}

{% set exportHtml = '' %}
{% set importHtml = '' %}

{% set counter = 0 %}
{% set importOptions = [] %}
{% for configuration in get_import_export_configuration(alias) %}

    {% set counter = counter + 1 %}

    {% set hasImportProcessor = configuration.importProcessorAlias is defined and configuration.importProcessorAlias is not empty %}
    {% set importAllowed = hasImportProcessor and is_granted('oro_importexport_import') %}
    {% set importLabel = configuration.importButtonLabel|default('oro.importexport.import.label'|trans) %}
    {% set importValidationLabel = configuration.importValidationButtonLabel|default('oro.importexport.import.validation_label'|trans) %}

    {% set hasExportProcessor = configuration.exportProcessorAlias is defined and configuration.exportProcessorAlias is not empty %}
    {% set exportAllowed = hasExportProcessor and is_granted('oro_importexport_export') %}
    {% set exportProcessor = configuration.exportProcessorAlias %}
    {% if exportAllowed %}
        {% set isExportPopupRequired = configuration.exportProcessorAlias is iterable %}
        {% set exportProcessor = configuration.exportProcessorAlias is iterable ? configuration.exportProcessorAlias[0] : configuration.exportProcessorAlias %}
    {% endif %}
    {% set exportLabel = configuration.exportButtonLabel|default('oro.importexport.export.label'|trans) %}

    {% set hasExportTemplateProcessor = configuration.exportTemplateProcessorAlias is defined and configuration.exportTemplateProcessorAlias is not empty %}
    {% set exportTemplateProcessor = configuration.exportTemplateProcessorAlias %}
    {% if hasExportTemplateProcessor %}
        {% set isExportTemplatePopupRequired = configuration.exportTemplateProcessorAlias is iterable %}
        {% set exportTemplateProcessor = configuration.exportTemplateProcessorAlias is iterable ? configuration.exportTemplateProcessorAlias[0] : configuration.exportTemplateProcessorAlias %}
    {% endif %}

    {% set exportTemplateLabel = configuration.exportTemplateButtonLabel|default('oro.importexport.export_template.label'|trans) %}

    {# separate page options from concrete import/export options #}
    {% set importOptions = importOptions|merge([{
        'entity': configuration.entityClass,
        'routeOptions': configuration.routeOptions|default({}),
        'importTitle': configuration.importPopupTitle|default(importLabel),
        'importJob': configuration.importJobName|default(null),
        'importValidateJob': configuration.importValidationJobName|default(null),
        'exportTemplateTitle': configuration.exportTemplatePopupTitle|default(exportLabel),
        'exportTemplateJob': configuration.exportTemplateJobName|default(null),
        'exportTemplateProcessor': exportTemplateProcessor|default(null),

        'isExportTemplatePopupRequired': isExportTemplatePopupRequired|default(false),
        'filePrefix': configuration.filePrefix|default(null),
        'datagridName': configuration.dataGridName|default(null),
        'afterRefreshPageMessage': configuration.afterRefreshPageMessage|default(null),
        'refreshPageOnSuccess': configuration.refreshPageOnSuccess|default(false)
    }]) %}

    {% if exportAllowed or importAllowed %}
        <span data-page-component-module="oroui/js/app/components/view-component"
              data-page-component-options="{{ {
                  'view': 'oroimportexport/js/app/views/import-export-buttons-view',
                  'selectors': {
                      'container': '[data-target="import-export-container"]',
                      'importButton': '.importButton' ~ counter,
                      'importValidationButton': '#importValidationButton' ~ counter,
                      'exportButton': '.exportButton' ~ counter,
                      'templateButton': '#templateButton' ~ counter
                  },
                  'data': {
                      'entity': configuration.entityClass,
                      'routeOptions': configuration.routeOptions|default({}),
                      'importTitle': configuration.importPopupTitle|default(importLabel),
                      'importJob': configuration.importJobName|default(null),
                      'importValidateJob': configuration.importValidationJobName|default(null),
                      'exportTitle': configuration.exportPopupTitle|default(exportLabel),
                      'exportJob': configuration.exportJobName|default(null),
                      'exportProcessor': exportProcessor|default(null),
                      'isExportPopupRequired': isExportPopupRequired|default(false),
                      'exportTemplateTitle': configuration.exportTemplatePopupTitle|default(exportLabel),
                      'exportTemplateJob': configuration.exportTemplateJobName|default(null),
                      'exportTemplateProcessor': exportTemplateProcessor|default(null),
                      'isExportTemplatePopupRequired': isExportTemplatePopupRequired|default(false),
                      'filePrefix': configuration.filePrefix|default(null),
                      'datagridName': configuration.dataGridName|default(null),
                      'afterRefreshPageMessage': configuration.afterRefreshPageMessage|default(null),
                      'refreshPageOnSuccess': configuration.refreshPageOnSuccess|default(false)
                  }
              }|json_encode }}">

            {% if exportAllowed %}
                {% set html %}
                    <a type="button" class="btn export-btn icons-holder-text no-hash exportButton{{ counter }}" href="#">
                        <i class="fa-upload hide-text">{{ configuration.exportButtonLabel }}</i>{{ configuration.exportButtonLabel }}
                    </a>
                {% endset %}

                {% set exportHtml = exportHtml ~ html %}
            {% endif %}

            {% if importAllowed %}
                {% set html %}

                    <a type="button" class="btn import-btn icons-holder-text no-hash importButton{{ counter }}" href="#">
                        <i class="fa-download hide-text">{{ configuration.importButtonLabel }}</i>{{ configuration.importButtonLabel }}
                    </a>

                    <a type="button" class="btn import-validation-btn icons-holder-text no-hash" href="#" id="importValidationButton{{ counter }}">
                        <i class="icon-download-alt hide-text">{{ configuration.importValidationButtonLabel }}</i>{{ configuration.importValidationButtonLabel }}
                    </a>

                    {% if hasExportTemplateProcessor %}
                        <a type="button" class="btn template-btn icons-holder-text no-hash" href="#" id="templateButton{{ counter }}">
                            <i class="fa-file-o hide-text">{{ configuration.exportTemplateButtonLabel }}</i>{{ configuration.exportTemplateButtonLabel }}
                        </a>
                    {% endif %}

                {% endset %}

                {% set importHtml = importHtml ~ html %}
            {% endif %}
        </span>
    {% endif %}

{% endfor %}

<div data-target="import-export-container" class="pull-left">
   {# check if EXPORT AVAILABLE @TODO #}
    <div class="btn-group">
        {{ UI.pinnedDropdownButton({
            'html': exportHtml
        }) }}
    </div>

    {# check if IMPORT AVAILABLE @TODO #}
    <div class="btn-group"
         data-page-component-module="oroui/js/app/components/view-component"
         data-page-component-options="{{
         {
             'view': 'oroimportexport/js/app/views/import-button-view',
             "alias": alias
         }|json_encode
     }}">
        {# @todo: OPTIONS #}
        <a type="button" class="btn import-btn icons-holder-text no-hash" href="#">
            <i class="fa-download hide-text">{{ 'Import'|trans }}</i>{{ 'Import'|trans }}
        </a>
    </div>
</div>
